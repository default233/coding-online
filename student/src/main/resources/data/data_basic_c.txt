{"problemSetProblem": {"id": "237", "label": "练习2-1", "score": 5, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "Programming in C is fun!", "content": "本题要求编写程序，输出一个短句“Programming in C is fun!”。\n\n### 输入格式:\n\n本题目没有输入。\n\n### 输出格式:\n\n在一行中输出短句“Programming in C is fun!”。", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "1", "description": "本题要求编写程序，输出一个短句“Programming in C is fun!”。\n\n### 输入格式:\n\n本题目没有输入。\n\n### 输出格式:\n\n在一行中输出短句“Programming in C is fun!”。"}}
{"problemSetProblem": {"id": "238", "label": "练习2-3", "score": 5, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "输出倒三角图案", "content": "本题要求编写程序，输出指定的由“*”组成的倒三角图案。\n\n### 输入格式:\n\n本题目没有输入。\n\n### 输出格式:\n\n按照下列格式输出由“*”组成的倒三角图案。\n\n```\n* * * *\n * * *\n  * *\n   *\n```", "type": "PROGRAMMING", "author": "陈建海", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "2", "description": "本题要求编写程序，输出指定的由“*”组成的倒三角图案。\n\n### 输入格式:\n\n本题目没有输入。\n\n### 输出格式:\n\n按照下列格式输出由“*”组成的倒三角图案。\n\n```\n* * * *\n * * *\n  * *\n   *\n```"}}
{"problemSetProblem": {"id": "239", "label": "练习2-4", "score": 5, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "温度转换", "content": "本题要求编写程序，计算华氏温度150°F对应的摄氏温度。计算公式：$$C = 5\\times (F-32)/9$$，式中：$$C$$表示摄氏温度，$$F$$表示华氏温度，输出数据要求为整型。\n\n### 输入格式:\n\n本题目没有输入。\n\n### 输出格式:\n\n按照下列格式输出\n\n```\nfahr = 150, celsius = 计算所得摄氏温度的整数值\n```", "type": "PROGRAMMING", "author": "颜晖", "authorOrganization": {"id": "2", "name": "浙大城市学院", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "3", "description": "本题要求编写程序，计算华氏温度150°F对应的摄氏温度。计算公式：$$C = 5\\times (F-32)/9$$，式中：$$C$$表示摄氏温度，$$F$$表示华氏温度，输出数据要求为整型。\n\n### 输入格式:\n\n本题目没有输入。\n\n### 输出格式:\n\n按照下列格式输出\n\n```\nfahr = 150, celsius = 计算所得摄氏温度的整数值\n```"}}
{"problemSetProblem": {"id": "240", "label": "练习2-6", "score": 5, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "计算物体自由下落的距离", "content": "一个物体从100米的高空自由落下。编写程序，求它在前3秒内下落的垂直距离。设重力加速度为10米/秒$$^2$$。\n\n### 输入格式:\n\n本题目没有输入。\n\n### 输出格式:\n\n按照下列格式输出\n\n```\nheight = 垂直距离值\n```\n结果保留2位小数。", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "4", "description": "一个物体从100米的高空自由落下。编写程序，求它在前3秒内下落的垂直距离。设重力加速度为10米/秒$$^2$$。\n\n### 输入格式:\n\n本题目没有输入。\n\n### 输出格式:\n\n按照下列格式输出\n\n```\nheight = 垂直距离值\n```\n结果保留2位小数。"}}
{"problemSetProblem": {"id": "241", "label": "练习2-8", "score": 10, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "计算摄氏温度", "content": "给定一个华氏温度$$F$$，本题要求编写程序，计算对应的摄氏温度$$C$$。计算公式：$$C = 5\\times (F-32)/9$$。题目保证输入与输出均在整型范围内。\n\n### 输入格式:\n\n输入在一行中给出一个华氏温度。\n\n### 输出格式:\n\n在一行中按照格式“Celsius = C”输出对应的摄氏温度C的整数值。 \n\n### 输入样例:\n```in\n150\n```\n\n### 输出样例:\n```out\nCelsius = 65\n```", "type": "PROGRAMMING", "author": "陈建海", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "5", "description": "给定一个华氏温度$$F$$，本题要求编写程序，计算对应的摄氏温度$$C$$。计算公式：$$C = 5\\times (F-32)/9$$。题目保证输入与输出均在整型范围内。\n\n### 输入格式:\n\n输入在一行中给出一个华氏温度。\n\n### 输出格式:\n\n在一行中按照格式“Celsius = C”输出对应的摄氏温度C的整数值。 \n\n### 输入样例:\n```in\n150\n```\n\n### 输出样例:\n```out\nCelsius = 65\n```"}}
{"problemSetProblem": {"id": "242", "label": "练习2-9", "score": 10, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "整数四则运算", "content": "本题要求编写程序，计算2个正整数的和、差、积、商并输出。题目保证输入和输出全部在整型范围内。\n\n### 输入格式:\n\n输入在一行中给出2个正整数A和B。 \n\n### 输出格式:\n\n在4行中按照格式“A 运算符 B = 结果”顺序输出和、差、积、商。 \n\n### 输入样例:\n```in\n3 2\n```\n\n### 输出样例:\n```out\n3 + 2 = 5\n3 - 2 = 1\n3 * 2 = 6\n3 / 2 = 1\n```", "type": "PROGRAMMING", "author": "乔林", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "6", "description": "本题要求编写程序，计算2个正整数的和、差、积、商并输出。题目保证输入和输出全部在整型范围内。\n\n### 输入格式:\n\n输入在一行中给出2个正整数A和B。 \n\n### 输出格式:\n\n在4行中按照格式“A 运算符 B = 结果”顺序输出和、差、积、商。 \n\n### 输入样例:\n```in\n3 2\n```\n\n### 输出样例:\n```out\n3 + 2 = 5\n3 - 2 = 1\n3 * 2 = 6\n3 / 2 = 1\n```"}}
{"problemSetProblem": {"id": "243", "label": "练习2-10", "score": 10, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [{"name": "", "input": "10\n", "output": "f(10.0) = 0.1\n"}, {"name": "", "input": "10\n", "output": "f(10.0) = 0.1\n"}], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "计算分段函数[1]", "content": "本题目要求计算下列分段函数$$f(x)$$的值：\n\n![公式](~/1)\n\n### 输入格式:\n\n输入在一行中给出实数x。\n\n### 输出格式:\n\n在一行中按“f(x) = result”的格式输出，其中x与result都保留一位小数。\n\n### 输入样例1:\n```in\n10\n```\n\n### 输出样例1:\n```out\nf(10.0) = 0.1\n```\n\n### 输入样例2:\n```\n0\n```\n\n### 输出样例2:\n```\nf(0.0) = 0.0\n```", "type": "PROGRAMMING", "author": "颜晖", "authorOrganization": {"id": "2", "name": "浙大城市学院", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "7", "description": "本题目要求计算下列分段函数$$f(x)$$的值：\n\n![公式](~/1)\n\n### 输入格式:\n\n输入在一行中给出实数x。\n\n### 输出格式:\n\n在一行中按“f(x) = result”的格式输出，其中x与result都保留一位小数。\n\n### 输入样例1:\n```in\n10\n```\n\n### 输出样例1:\n```out\nf(10.0) = 0.1\n```\n\n### 输入样例2:\n```\n0\n```\n\n### 输出样例2:\n```\nf(0.0) = 0.0\n```"}}
{"problemSetProblem": {"id": "244", "label": "练习2-11", "score": 10, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "计算分段函数[2]", "content": "本题目要求计算下列分段函数$$f(x)$$的值：\n\n![f2-11](~/2)\n\n注：可在头文件中包含`math.h`，并调用`sqrt`函数求平方根，调用`pow`函数求幂。 \n\n### 输入格式:\n\n输入在一行中给出实数x。\n\n### 输出格式:\n\n在一行中按“f(x) = result”的格式输出，其中x与result都保留两位小数。\n\n### 输入样例1:\n```in\n10\n```\n\n### 输出样例1:\n```out\nf(10.00) = 3.16\n```\n\n### 输入样例2:\n```\n-0.5\n```\n\n### 输出样例2:\n```\nf(-0.50) = -2.75\n```", "type": "PROGRAMMING", "author": "陈建海", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "8", "description": "本题目要求计算下列分段函数$$f(x)$$的值：\n\n![f2-11](~/2)\n\n注：可在头文件中包含`math.h`，并调用`sqrt`函数求平方根，调用`pow`函数求幂。 \n\n### 输入格式:\n\n输入在一行中给出实数x。\n\n### 输出格式:\n\n在一行中按“f(x) = result”的格式输出，其中x与result都保留两位小数。\n\n### 输入样例1:\n```in\n10\n```\n\n### 输出样例1:\n```out\nf(10.00) = 3.16\n```\n\n### 输入样例2:\n```\n-0.5\n```\n\n### 输出样例2:\n```\nf(-0.50) = -2.75\n```"}}
{"problemSetProblem": {"id": "245", "label": "练习2-12", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "输出华氏-摄氏温度转换表", "content": "输入2个正整数`lower`和`upper`（`lower`$$\\le$$`upper`$$\\le$$100），请输出一张取值范围为[`lower`，`upper`]、且每次增加2华氏度的华氏-摄氏温度转换表。\n\n温度转换的计算公式：$$C = 5 \\times (F - 32) / 9$$，其中：$$C$$表示摄氏温度，$$F$$表示华氏温度。\n\n### 输入格式:\n\n在一行中输入2个整数，分别表示`lower`和`upper`的值，中间用空格分开。\n\n### 输出格式:\n\n第一行输出：\"fahr celsius\"\n\n接着每行输出一个华氏温度fahr（整型）与一个摄氏温度celsius（占据6个字符宽度，靠右对齐，保留1位小数）。\n\n若输入的范围不合法，则输出\"Invalid.\"。 \n\n### 输入样例1:\n```in\n32 35\n```\n\n### 输出样例1:\n```out\nfahr celsius\n32   0.0\n34   1.1\n```\n\n### 输入样例2:\n```\n40 30\n```\n\n### 输出样例2:\n```\nInvalid.\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "9", "description": "输入2个正整数`lower`和`upper`（`lower`$$\\le$$`upper`$$\\le$$100），请输出一张取值范围为[`lower`，`upper`]、且每次增加2华氏度的华氏-摄氏温度转换表。\n\n温度转换的计算公式：$$C = 5 \\times (F - 32) / 9$$，其中：$$C$$表示摄氏温度，$$F$$表示华氏温度。\n\n### 输入格式:\n\n在一行中输入2个整数，分别表示`lower`和`upper`的值，中间用空格分开。\n\n### 输出格式:\n\n第一行输出：\"fahr celsius\"\n\n接着每行输出一个华氏温度fahr（整型）与一个摄氏温度celsius（占据6个字符宽度，靠右对齐，保留1位小数）。\n\n若输入的范围不合法，则输出\"Invalid.\"。 \n\n### 输入样例1:\n```in\n32 35\n```\n\n### 输出样例1:\n```out\nfahr celsius\n32   0.0\n34   1.1\n```\n\n### 输入样例2:\n```\n40 30\n```\n\n### 输出样例2:\n```\nInvalid.\n```"}}
{"problemSetProblem": {"id": "246", "label": "练习2-13", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "求N分之一序列前N项和", "content": "本题要求编写程序，计算序列 1 + 1/2 + 1/3 + ... 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n6\n```\n\n### 输出样例:\n```out\nsum = 2.450000\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "10", "description": "本题要求编写程序，计算序列 1 + 1/2 + 1/3 + ... 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n6\n```\n\n### 输出样例:\n```out\nsum = 2.450000\n```"}}
{"problemSetProblem": {"id": "247", "label": "练习2-14", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "求奇数分之一序列前N项和", "content": "本题要求编写程序，计算序列 1 + 1/3 + 1/5 + ... 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n 在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n23\n```\n\n### 输出样例:\n```out\nsum = 2.549541\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "11", "description": "本题要求编写程序，计算序列 1 + 1/3 + 1/5 + ... 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n 在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n23\n```\n\n### 输出样例:\n```out\nsum = 2.549541\n```"}}
{"problemSetProblem": {"id": "248", "label": "练习2-15", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "求简单交错序列前N项和", "content": "本题要求编写程序,计算序列 1 - 1/4 + 1/7 - 1/10 + ... 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后三位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n10\n```\n\n### 输出样例:\n```out\nsum = 0.819\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "12", "description": "本题要求编写程序,计算序列 1 - 1/4 + 1/7 - 1/10 + ... 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后三位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n10\n```\n\n### 输出样例:\n```out\nsum = 0.819\n```"}}
{"problemSetProblem": {"id": "249", "label": "练习2-17", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "生成3的乘方表", "content": "输入一个非负整数$$n$$，生成一张3的乘方表，输出$$3^0$$~$$3^n$$的值。可调用幂函数计算3的乘方。\n\n### 输入格式:\n\n输入在一行中给出一个非负整数$$n$$。\n\n### 输出格式:\n\n按照幂的递增顺序输出$$n+1$$行，每行格式为“pow(3,i) = 3的i次幂的值”。题目保证输出数据不超过长整型整数的范围。\n\n### 输入样例:\n```in\n3\n```\n\n### 输出样例:\n```out\npow(3,0) = 1\npow(3,1) = 3\npow(3,2) = 9\npow(3,3) = 27\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "13", "description": "输入一个非负整数$$n$$，生成一张3的乘方表，输出$$3^0$$~$$3^n$$的值。可调用幂函数计算3的乘方。\n\n### 输入格式:\n\n输入在一行中给出一个非负整数$$n$$。\n\n### 输出格式:\n\n按照幂的递增顺序输出$$n+1$$行，每行格式为“pow(3,i) = 3的i次幂的值”。题目保证输出数据不超过长整型整数的范围。\n\n### 输入样例:\n```in\n3\n```\n\n### 输出样例:\n```out\npow(3,0) = 1\npow(3,1) = 3\npow(3,2) = 9\npow(3,3) = 27\n```"}}
{"problemSetProblem": {"id": "250", "label": "练习2-18", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "求组合数", "content": "本题要求编写程序，根据公式$$C^{m}_{n} = \\frac{n!}{m!(n-m)!}$$算出从$$n$$个不同元素中取出$$m$$个元素（$$m\\le n$$）的组合数。\n\n建议定义和调用函数`fact(n)`计算`n!`，其中`n`的类型是`int`，函数类型是`double`。\n\n### 输入格式:\n\n输入在一行中给出两个正整数$$m$$和$$n$$（$$m\\le n$$），以空格分隔。\n\n### 输出格式:\n\n按照格式“result = 组合数计算结果”输出。题目保证结果在`double`类型范围内。\n\n### 输入样例:\n```in\n2 7\n```\n\n### 输出样例:\n```out\nresult = 21\n```", "type": "PROGRAMMING", "author": "颜晖", "authorOrganization": {"id": "2", "name": "浙大城市学院", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "70", "description": "本题要求编写程序，根据公式$$C^{m}_{n} = \\frac{n!}{m!(n-m)!}$$算出从$$n$$个不同元素中取出$$m$$个元素（$$m\\le n$$）的组合数。\n\n建议定义和调用函数`fact(n)`计算`n!`，其中`n`的类型是`int`，函数类型是`double`。\n\n### 输入格式:\n\n输入在一行中给出两个正整数$$m$$和$$n$$（$$m\\le n$$），以空格分隔。\n\n### 输出格式:\n\n按照格式“result = 组合数计算结果”输出。题目保证结果在`double`类型范围内。\n\n### 输入样例:\n```in\n2 7\n```\n\n### 输出样例:\n```out\nresult = 21\n```"}}
{"problemSetProblem": {"id": "265", "label": "习题2-1", "score": 10, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "求整数均值", "content": "本题要求编写程序，计算4个整数的和与平均值。题目保证输入与输出均在整型范围内。\n\n### 输入格式:\n\n输入在一行中给出4个整数，其间以空格分隔。 \n\n### 输出格式:\n\n在一行中按照格式“Sum = 和; Average = 平均值”顺序输出和与平均值，其中平均值精确到小数点后一位。 \n\n### 输入样例:\n```in\n1 2 3 4\n```\n\n### 输出样例:\n```out\nSum = 10; Average = 2.5\n```", "type": "PROGRAMMING", "author": "乔林", "authorOrganization": {"id": "3", "name": "清华大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "71", "description": "本题要求编写程序，计算4个整数的和与平均值。题目保证输入与输出均在整型范围内。\n\n### 输入格式:\n\n输入在一行中给出4个整数，其间以空格分隔。 \n\n### 输出格式:\n\n在一行中按照格式“Sum = 和; Average = 平均值”顺序输出和与平均值，其中平均值精确到小数点后一位。 \n\n### 输入样例:\n```in\n1 2 3 4\n```\n\n### 输出样例:\n```out\nSum = 10; Average = 2.5\n```"}}
{"problemSetProblem": {"id": "266", "label": "习题2-2", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "阶梯电价", "content": "为了提倡居民节约用电，某省电力公司执行“阶梯电价”，安装一户一表的居民用户电价分为两个“阶梯”：月用电量50千瓦时（含50千瓦时）以内的，电价为0.53元/千瓦时；超过50千瓦时的，超出部分的用电量，电价上调0.05元/千瓦时。请编写程序计算电费。\n\n### 输入格式:\n\n输入在一行中给出某用户的月用电量（单位：千瓦时）。\n\n### 输出格式:\n\n在一行中输出该用户应支付的电费（元），结果保留两位小数，格式如：“cost = 应付电费值”；若用电量小于0，则输出\"Invalid Value!\"。\n\n### 输入样例1:\n```in\n10\n```\n\n### 输出样例1:\n```out\ncost = 5.30\n```\n\n### 输入样例2:\n```\n100\n```\n\n### 输出样例2:\n```\ncost = 55.50\n```", "type": "PROGRAMMING", "author": "陈建海", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "72", "description": "为了提倡居民节约用电，某省电力公司执行“阶梯电价”，安装一户一表的居民用户电价分为两个“阶梯”：月用电量50千瓦时（含50千瓦时）以内的，电价为0.53元/千瓦时；超过50千瓦时的，超出部分的用电量，电价上调0.05元/千瓦时。请编写程序计算电费。\n\n### 输入格式:\n\n输入在一行中给出某用户的月用电量（单位：千瓦时）。\n\n### 输出格式:\n\n在一行中输出该用户应支付的电费（元），结果保留两位小数，格式如：“cost = 应付电费值”；若用电量小于0，则输出\"Invalid Value!\"。\n\n### 输入样例1:\n```in\n10\n```\n\n### 输出样例1:\n```out\ncost = 5.30\n```\n\n### 输入样例2:\n```\n100\n```\n\n### 输出样例2:\n```\ncost = 55.50\n```"}}
{"problemSetProblem": {"id": "267", "label": "习题2-3", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "求平方与倒数序列的部分和", "content": "本题要求对两个正整数$$m$$和$$n$$（$$m \\le n$$）编写程序，计算序列和$$m^2 + 1/m + (m+1)^2 + 1/(m+1) + \\cdots + n^2 + 1/n$$。\n\n### 输入格式:\n\n输入在一行中给出两个正整数$$m$$和$$n$$（$$m \\le n$$），其间以空格分开。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n5 10\n```\n\n### 输出样例:\n```out\nsum = 355.845635\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "73", "description": "本题要求对两个正整数$$m$$和$$n$$（$$m \\le n$$）编写程序，计算序列和$$m^2 + 1/m + (m+1)^2 + 1/(m+1) + \\cdots + n^2 + 1/n$$。\n\n### 输入格式:\n\n输入在一行中给出两个正整数$$m$$和$$n$$（$$m \\le n$$），其间以空格分开。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n5 10\n```\n\n### 输出样例:\n```out\nsum = 355.845635\n```"}}
{"problemSetProblem": {"id": "268", "label": "习题2-4", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "求交错序列前N项和", "content": "本题要求编写程序，计算交错序列 1-2/3+3/5-4/7+5/9-6/11+... 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中输出部分和的值，结果保留三位小数。\n\n### 输入样例:\n```in\n5\n```\n\n### 输出样例:\n```out\n0.917\n```", "type": "PROGRAMMING", "author": "陈建海", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "74", "description": "本题要求编写程序，计算交错序列 1-2/3+3/5-4/7+5/9-6/11+... 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中输出部分和的值，结果保留三位小数。\n\n### 输入样例:\n```in\n5\n```\n\n### 输出样例:\n```out\n0.917\n```"}}
{"problemSetProblem": {"id": "269", "label": "习题2-5", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "求平方根序列前N项和", "content": "本题要求编写程序，计算平方根序列$$\\sqrt{1} + \\sqrt{2} + \\sqrt{3} + \\cdots$$的前N项之和。可包含头文件`math.h`，并调用`sqrt`函数求平方根。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后两位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n10\n```\n\n### 输出样例:\n```out\nsum = 22.47\n```", "type": "PROGRAMMING", "author": "颜晖", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "75", "description": "本题要求编写程序，计算平方根序列$$\\sqrt{1} + \\sqrt{2} + \\sqrt{3} + \\cdots$$的前N项之和。可包含头文件`math.h`，并调用`sqrt`函数求平方根。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后两位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n10\n```\n\n### 输出样例:\n```out\nsum = 22.47\n```"}}
{"problemSetProblem": {"id": "270", "label": "习题2-6", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "求阶乘序列前N项和", "content": "本题要求编写程序，计算序列 $$1! + 2! + 3! + \\cdots$$ 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个不超过12的正整数N。\n\n### 输出格式:\n\n在一行中输出整数结果。\n\n### 输入样例:\n```in\n5\n```\n\n### 输出样例:\n```out\n153\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "76", "description": "本题要求编写程序，计算序列 $$1! + 2! + 3! + \\cdots$$ 的前N项之和。\n\n### 输入格式:\n\n输入在一行中给出一个不超过12的正整数N。\n\n### 输出格式:\n\n在一行中输出整数结果。\n\n### 输入样例:\n```in\n5\n```\n\n### 输出样例:\n```out\n153\n```"}}
{"problemSetProblem": {"id": "271", "label": "练习3-2", "score": 10, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "计算符号函数的值", "content": "对于任一整数$$n$$，符号函数$$sign(n)$$的定义如下：\n\n![](~/3)\n\n请编写程序计算该函数对任一输入整数的值。\n\n### 输入格式:\n\n输入在一行中给出整数n。\n\n### 输出格式:\n\n在一行中按照格式“sign(n) = 函数值”输出该整数n对应的函数值。\n\n### 输入样例1:\n```in\n10\n```\n\n### 输出样例1:\n```out\nsign(10) = 1\n```\n\n### 输入样例2:\n```\n0\n```\n\n### 输出样例2:\n```\nsign(0) = 0\n```\n\n### 输入样例3:\n```\n-98\n```\n\n### 输出样例3:\n```\nsign(-98) = -1\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "77", "description": "对于任一整数$$n$$，符号函数$$sign(n)$$的定义如下：\n\n![](~/3)\n\n请编写程序计算该函数对任一输入整数的值。\n\n### 输入格式:\n\n输入在一行中给出整数n。\n\n### 输出格式:\n\n在一行中按照格式“sign(n) = 函数值”输出该整数n对应的函数值。\n\n### 输入样例1:\n```in\n10\n```\n\n### 输出样例1:\n```out\nsign(10) = 1\n```\n\n### 输入样例2:\n```\n0\n```\n\n### 输出样例2:\n```\nsign(0) = 0\n```\n\n### 输入样例3:\n```\n-98\n```\n\n### 输出样例3:\n```\nsign(-98) = -1\n```"}}
{"problemSetProblem": {"id": "272", "label": "练习3-3", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "统计学生平均成绩与及格人数", "content": "本题要求编写程序，计算学生们的平均成绩，并统计及格（成绩不低于60分）的人数。题目保证输入与输出均在整型范围内。\n\n### 输入格式:\n\n输入在第一行中给出非负整数N，即学生人数。第二行给出N个非负整数，即这N位学生的成绩，其间以空格分隔。 \n\n### 输出格式:\n\n按照以下格式输出：\n```\naverage = 成绩均值\ncount = 及格人数\n```\n其中平均值精确到小数点后一位。 \n\n### 输入样例:\n```in\n5\n77 54 92 73 60\n```\n\n### 输出样例:\n```out\naverage = 71.2\ncount = 4\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "78", "description": "本题要求编写程序，计算学生们的平均成绩，并统计及格（成绩不低于60分）的人数。题目保证输入与输出均在整型范围内。\n\n### 输入格式:\n\n输入在第一行中给出非负整数N，即学生人数。第二行给出N个非负整数，即这N位学生的成绩，其间以空格分隔。 \n\n### 输出格式:\n\n按照以下格式输出：\n```\naverage = 成绩均值\ncount = 及格人数\n```\n其中平均值精确到小数点后一位。 \n\n### 输入样例:\n```in\n5\n77 54 92 73 60\n```\n\n### 输出样例:\n```out\naverage = 71.2\ncount = 4\n```"}}
{"problemSetProblem": {"id": "273", "label": "练习3-4", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "统计字符", "content": "本题要求编写程序，输入10个字符，统计其中英文字母、空格或回车、数字字符和其他字符的个数。\n\n### 输入格式:\n\n输入为10个字符。最后一个回车表示输入结束，不算在内。\n\n### 输出格式:\n\n在一行内按照\n```\nletter = 英文字母个数, blank = 空格或回车个数, digit = 数字字符个数, other = 其他字符个数\n```\n的格式输出。\n\n### 输入样例:\n```in\naZ &\n09 Az\n```\n\n### 输出样例:\n```out\nletter = 4, blank = 3, digit = 2, other = 1\n```", "type": "PROGRAMMING", "author": "颜晖", "authorOrganization": {"id": "2", "name": "浙大城市学院", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "79", "description": "本题要求编写程序，输入10个字符，统计其中英文字母、空格或回车、数字字符和其他字符的个数。\n\n### 输入格式:\n\n输入为10个字符。最后一个回车表示输入结束，不算在内。\n\n### 输出格式:\n\n在一行内按照\n```\nletter = 英文字母个数, blank = 空格或回车个数, digit = 数字字符个数, other = 其他字符个数\n```\n的格式输出。\n\n### 输入样例:\n```in\naZ &\n09 Az\n```\n\n### 输出样例:\n```out\nletter = 4, blank = 3, digit = 2, other = 1\n```"}}
{"problemSetProblem": {"id": "274", "label": "练习3-7", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "成绩转换", "content": "本题要求编写程序将一个百分制成绩转换为五分制成绩。转换规则：\n\n- 大于等于90分为A；\n- 小于90且大于等于80为B；\n- 小于80且大于等于70为C；\n- 小于70且大于等于60为D；\n- 小于60为E。\n\n\n### 输入格式:\n\n输入在一行中给出一个整数的百分制成绩。 \n\n### 输出格式:\n\n在一行中输出对应的五分制成绩。\n\n### 输入样例:\n```in\n90\n```\n\n### 输出样例:\n```out\nA\n```", "type": "PROGRAMMING", "author": "沈睿", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "81", "description": "本题要求编写程序将一个百分制成绩转换为五分制成绩。转换规则：\n\n- 大于等于90分为A；\n- 小于90且大于等于80为B；\n- 小于80且大于等于70为C；\n- 小于70且大于等于60为D；\n- 小于60为E。\n\n\n### 输入格式:\n\n输入在一行中给出一个整数的百分制成绩。 \n\n### 输出格式:\n\n在一行中输出对应的五分制成绩。\n\n### 输入样例:\n```in\n90\n```\n\n### 输出样例:\n```out\nA\n```"}}
{"problemSetProblem": {"id": "275", "label": "练习3-8", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "查询水果价格", "content": "给定四种水果，分别是苹果（apple）、梨（pear）、桔子（orange）、葡萄（grape），单价分别对应为3.00元/公斤、2.50元/公斤、4.10元/公斤、10.20元/公斤。\n\n首先在屏幕上显示以下菜单：\n```\n[1] apple\n[2] pear\n[3] orange\n[4] grape\n[0] exit\n```\n用户可以输入编号1~4查询对应水果的单价。当连续查询次数超过5次时，程序应自动退出查询；不到5次而用户输入0即退出；输入其他编号，显示价格为0。\n\n### 输入格式:\n\n输入在一行中给出用户连续输入的若干个编号。\n\n### 输出格式:\n\n首先在屏幕上显示菜单。然后对应用户的每个输入，在一行中按格式“price = 价格”输出查询结果，其中价格保留两位小数。当用户连续查询次数超过5次、或主动输入0时，程序结束。\n\n### 输入样例1:\n```in\n3 -1 0 2\n```\n\n### 输出样例1:\n```out\n[1] apple\n[2] pear\n[3] orange\n[4] grape\n[0] exit\nprice = 4.10\nprice = 0.00\n```\n\n### 输入样例2:\n```\n1 2 3 3 4 4 5 6 7 8\n```\n\n### 输出样例2:\n```\n[1] apple\n[2] pear\n[3] orange\n[4] grape\n[0] exit\nprice = 3.00\nprice = 2.50\nprice = 4.10\nprice = 4.10\nprice = 10.20\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "82", "description": "给定四种水果，分别是苹果（apple）、梨（pear）、桔子（orange）、葡萄（grape），单价分别对应为3.00元/公斤、2.50元/公斤、4.10元/公斤、10.20元/公斤。\n\n首先在屏幕上显示以下菜单：\n```\n[1] apple\n[2] pear\n[3] orange\n[4] grape\n[0] exit\n```\n用户可以输入编号1~4查询对应水果的单价。当连续查询次数超过5次时，程序应自动退出查询；不到5次而用户输入0即退出；输入其他编号，显示价格为0。\n\n### 输入格式:\n\n输入在一行中给出用户连续输入的若干个编号。\n\n### 输出格式:\n\n首先在屏幕上显示菜单。然后对应用户的每个输入，在一行中按格式“price = 价格”输出查询结果，其中价格保留两位小数。当用户连续查询次数超过5次、或主动输入0时，程序结束。\n\n### 输入样例1:\n```in\n3 -1 0 2\n```\n\n### 输出样例1:\n```out\n[1] apple\n[2] pear\n[3] orange\n[4] grape\n[0] exit\nprice = 4.10\nprice = 0.00\n```\n\n### 输入样例2:\n```\n1 2 3 3 4 4 5 6 7 8\n```\n\n### 输出样例2:\n```\n[1] apple\n[2] pear\n[3] orange\n[4] grape\n[0] exit\nprice = 3.00\nprice = 2.50\nprice = 4.10\nprice = 4.10\nprice = 10.20\n```"}}
{"problemSetProblem": {"id": "276", "label": "练习3-5", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "输出闰年", "content": "输出21世纪中截止某个年份以来的所有闰年年份。注意：闰年的判别条件是该年年份能被4整除但不能被100整除、或者能被400整除。\n\n### 输入格式:\n\n输入在一行中给出21世纪的某个截止年份。\n\n### 输出格式:\n\n逐行输出满足条件的所有闰年年份，即每个年份占一行。输入若非21世纪的年份则输出\"Invalid year!\"。若不存在任何闰年，则输出“None”。\n\n### 输入样例1:\n```in\n2048\n```\n\n### 输出样例1:\n```out\n2004\n2008\n2012\n2016\n2020\n2024\n2028\n2032\n2036\n2040\n2044\n2048\n```\n\n### 输入样例2:\n```\n2000\n```\n\n### 输出样例2:\n```\nInvalid year!\n```", "type": "PROGRAMMING", "author": "陈建海", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "80", "description": "输出21世纪中截止某个年份以来的所有闰年年份。注意：闰年的判别条件是该年年份能被4整除但不能被100整除、或者能被400整除。\n\n### 输入格式:\n\n输入在一行中给出21世纪的某个截止年份。\n\n### 输出格式:\n\n逐行输出满足条件的所有闰年年份，即每个年份占一行。输入若非21世纪的年份则输出\"Invalid year!\"。若不存在任何闰年，则输出“None”。\n\n### 输入样例1:\n```in\n2048\n```\n\n### 输出样例1:\n```out\n2004\n2008\n2012\n2016\n2020\n2024\n2028\n2032\n2036\n2040\n2044\n2048\n```\n\n### 输入样例2:\n```\n2000\n```\n\n### 输出样例2:\n```\nInvalid year!\n```"}}
{"problemSetProblem": {"id": "277", "label": "习题3-1", "score": 10, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "比较大小", "content": "本题要求将输入的任意3个整数从小到大输出。\n\n### 输入格式:\n\n输入在一行中给出3个整数，其间以空格分隔。\n\n### 输出格式:\n\n在一行中将3个整数从小到大输出，其间以“->”相连。 \n\n### 输入样例:\n```in\n4 2 8\n```\n\n### 输出样例:\n```out\n2->4->8\n```", "type": "PROGRAMMING", "author": "杨起帆", "authorOrganization": {"id": "2", "name": "浙大城市学院", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "83", "description": "本题要求将输入的任意3个整数从小到大输出。\n\n### 输入格式:\n\n输入在一行中给出3个整数，其间以空格分隔。\n\n### 输出格式:\n\n在一行中将3个整数从小到大输出，其间以“->”相连。 \n\n### 输入样例:\n```in\n4 2 8\n```\n\n### 输出样例:\n```out\n2->4->8\n```"}}
{"problemSetProblem": {"id": "278", "label": "习题3-2", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [{"name": "", "input": "65 60\n", "output": "OK\n"}, {"name": "", "input": "110 100\n", "output": "Exceed 10%. Ticket 200\n"}, {"name": "", "input": "200 120\n", "output": "Exceed 67%. License Revoked\n"}, {"name": "", "input": "65 60\n", "output": "OK\n"}, {"name": "", "input": "110 100\n", "output": "Exceed 10%. Ticket 200\n"}, {"name": "", "input": "200 120\n", "output": "Exceed 67%. License Revoked\n"}], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "高速公路超速处罚", "content": "按照规定，在高速公路上行使的机动车，达到或超出本车道限速的10%则处200元罚款；若达到或超出50%，就要吊销驾驶证。请编写程序根据车速和限速自动判别对该机动车的处理。\n\n### 输入格式:\n\n输入在一行中给出2个正整数，分别对应车速和限速，其间以空格分隔。\n\n### 输出格式:\n\n在一行中输出处理意见：若属于正常行驶，则输出“OK”；若应处罚款，则输出“Exceed x%. Ticket 200”；若应吊销驾驶证，则输出“Exceed x%. License Revoked”。其中x是超速的百分比，精确到整数。 \n\n### 输入样例1:\n```in\n65 60\n```\n\n### 输出样例1:\n```out\nOK\n```\n\n### 输入样例2:\n```in\n110 100\n```\n\n### 输出样例2:\n```out\nExceed 10%. Ticket 200\n```\n\n### 输入样例3:\n```in\n200 120\n```\n\n### 输出样例3:\n```out\nExceed 67%. License Revoked\n```", "type": "PROGRAMMING", "author": "陈建海", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "84", "description": "按照规定，在高速公路上行使的机动车，达到或超出本车道限速的10%则处200元罚款；若达到或超出50%，就要吊销驾驶证。请编写程序根据车速和限速自动判别对该机动车的处理。\n\n### 输入格式:\n\n输入在一行中给出2个正整数，分别对应车速和限速，其间以空格分隔。\n\n### 输出格式:\n\n在一行中输出处理意见：若属于正常行驶，则输出“OK”；若应处罚款，则输出“Exceed x%. Ticket 200”；若应吊销驾驶证，则输出“Exceed x%. License Revoked”。其中x是超速的百分比，精确到整数。 \n\n### 输入样例1:\n```in\n65 60\n```\n\n### 输出样例1:\n```out\nOK\n```\n\n### 输入样例2:\n```in\n110 100\n```\n\n### 输出样例2:\n```out\nExceed 10%. Ticket 200\n```\n\n### 输入样例3:\n```in\n200 120\n```\n\n### 输出样例3:\n```out\nExceed 67%. License Revoked\n```"}}
{"problemSetProblem": {"id": "279", "label": "习题3-3", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "出租车计价", "content": "本题要求根据某城市普通出租车收费标准编写程序进行车费计算。具体标准如下：\n\n- 起步里程为3公里，起步费10元；\n- 超起步里程后10公里内，每公里2元；\n- 超过10公里以上的部分加收50%的回空补贴费，即每公里3元；\n- 营运过程中，因路阻及乘客要求临时停车的，按每5分钟2元计收（不足5分钟则不收费）。 \n\n### 输入格式:\n\n输入在一行中给出输入行驶里程（单位为公里，精确到小数点后1位）与等待时间（整数，单位为分钟），其间以空格分隔。\n\n### 输出格式:\n\n在一行中输出乘客应支付的车费（单位为元），结果四舍五入，保留到元。\n\n### 输入样例1:\n```in\n2.6 2\n```\n\n### 输出样例1:\n```out\n10\n```\n\n### 输入样例2:\n```\n5.1 4\n```\n\n### 输出样例2:\n```\n14\n```\n\n### 输入样例3:\n```\n12.5 9\n```\n\n### 输出样例3:\n```\n34\n```", "type": "PROGRAMMING", "author": "沈睿", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "85", "description": "本题要求根据某城市普通出租车收费标准编写程序进行车费计算。具体标准如下：\n\n- 起步里程为3公里，起步费10元；\n- 超起步里程后10公里内，每公里2元；\n- 超过10公里以上的部分加收50%的回空补贴费，即每公里3元；\n- 营运过程中，因路阻及乘客要求临时停车的，按每5分钟2元计收（不足5分钟则不收费）。 \n\n### 输入格式:\n\n输入在一行中给出输入行驶里程（单位为公里，精确到小数点后1位）与等待时间（整数，单位为分钟），其间以空格分隔。\n\n### 输出格式:\n\n在一行中输出乘客应支付的车费（单位为元），结果四舍五入，保留到元。\n\n### 输入样例1:\n```in\n2.6 2\n```\n\n### 输出样例1:\n```out\n10\n```\n\n### 输入样例2:\n```\n5.1 4\n```\n\n### 输出样例2:\n```\n14\n```\n\n### 输入样例3:\n```\n12.5 9\n```\n\n### 输出样例3:\n```\n34\n```"}}
{"problemSetProblem": {"id": "280", "label": "习题3-4", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "统计学生成绩", "content": "本题要求编写程序读入N个学生的百分制成绩，统计五分制成绩的分布。百分制成绩到五分制成绩的转换规则：\n\n- 大于等于90分为A；\n- 小于90且大于等于80为B；\n- 小于80且大于等于70为C；\n- 小于70且大于等于60为D；\n- 小于60为E。\n\n### 输入格式:\n\n输入在第一行中给出一个正整数N（$$\\le$$1000），即学生人数；第二行中给出N个学生的百分制成绩，其间以空格分隔。 \n\n### 输出格式:\n\n在一行中输出A、B、C、D、E对应的五分制成绩的人数分布，数字间以空格分隔，行末不得有多余空格。\n\n### 输入样例:\n```in\n7\n77 54 92 73 60 65 69\n```\n\n### 输出样例:\n```out\n1 0 2 3 1\n```", "type": "PROGRAMMING", "author": "陈建海", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "86", "description": "本题要求编写程序读入N个学生的百分制成绩，统计五分制成绩的分布。百分制成绩到五分制成绩的转换规则：\n\n- 大于等于90分为A；\n- 小于90且大于等于80为B；\n- 小于80且大于等于70为C；\n- 小于70且大于等于60为D；\n- 小于60为E。\n\n### 输入格式:\n\n输入在第一行中给出一个正整数N（$$\\le$$1000），即学生人数；第二行中给出N个学生的百分制成绩，其间以空格分隔。 \n\n### 输出格式:\n\n在一行中输出A、B、C、D、E对应的五分制成绩的人数分布，数字间以空格分隔，行末不得有多余空格。\n\n### 输入样例:\n```in\n7\n77 54 92 73 60 65 69\n```\n\n### 输出样例:\n```out\n1 0 2 3 1\n```"}}
{"problemSetProblem": {"id": "281", "label": "习题3-5", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 200, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [{"name": "", "input": "4 5 6 9 7 8\n", "output": "L = 10.13, A = 3.00\n"}, {"name": "", "input": "4 5 6 9 7 8\n", "output": "L = 10.13, A = 3.00\n"}], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "三角形判断", "content": "给定平面上任意三个点的坐标$$(x_1, y_1)$$、$$(x_2, y_2)$$、$$(x_3, y_3)$$，检验它们能否构成三角形。\n\n### 输入格式:\n\n输入在一行中顺序给出六个$$[-100, 100]$$范围内的数字，即三个点的坐标$$x_1$$、$$y_1$$、$$x_2$$、$$y_2$$、$$x_3$$、$$y_3$$。 \n\n### 输出格式:\n\n若这3个点不能构成三角形，则在一行中输出“Impossible”；若可以，则在一行中输出该三角形的周长和面积，格式为“L = 周长, A = 面积”，输出到小数点后2位。\n\n### 输入样例1:\n```in\n4 5 6 9 7 8\n```\n\n### 输出样例1:\n```out\nL = 10.13, A = 3.00\n```\n\n### 输入样例2:\n```\n4 6 8 12 12 18\n```\n\n### 输出样例2:\n```\nImpossible\n```", "type": "PROGRAMMING", "author": "杨起帆", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "87", "description": "给定平面上任意三个点的坐标$$(x_1, y_1)$$、$$(x_2, y_2)$$、$$(x_3, y_3)$$，检验它们能否构成三角形。\n\n### 输入格式:\n\n输入在一行中顺序给出六个$$[-100, 100]$$范围内的数字，即三个点的坐标$$x_1$$、$$y_1$$、$$x_2$$、$$y_2$$、$$x_3$$、$$y_3$$。 \n\n### 输出格式:\n\n若这3个点不能构成三角形，则在一行中输出“Impossible”；若可以，则在一行中输出该三角形的周长和面积，格式为“L = 周长, A = 面积”，输出到小数点后2位。\n\n### 输入样例1:\n```in\n4 5 6 9 7 8\n```\n\n### 输出样例1:\n```out\nL = 10.13, A = 3.00\n```\n\n### 输入样例2:\n```\n4 6 8 12 12 18\n```\n\n### 输出样例2:\n```\nImpossible\n```"}}
{"problemSetProblem": {"id": "282", "label": "练习4-3", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "求给定精度的简单交错序列部分和", "content": "本题要求编写程序，计算序列部分和 1 - 1/4 + 1/7 - 1/10 + ... 直到最后一项的绝对值不大于给定精度eps。\n\n### 输入格式:\n\n输入在一行中给出一个正实数eps。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。\n\n### 输入样例1:\n```in\n4E-2\n```\n\n### 输出样例1:\n```out\nsum = 0.854457\n```\n\n### 输入样例2:\n```\n0.02\n```\n\n### 输出样例2:\n```\nsum = 0.826310\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "363", "description": "本题要求编写程序，计算序列部分和 1 - 1/4 + 1/7 - 1/10 + ... 直到最后一项的绝对值不大于给定精度eps。\n\n### 输入格式:\n\n输入在一行中给出一个正实数eps。\n\n### 输出格式:\n\n在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。\n\n### 输入样例1:\n```in\n4E-2\n```\n\n### 输出样例1:\n```out\nsum = 0.854457\n```\n\n### 输入样例2:\n```\n0.02\n```\n\n### 输出样例2:\n```\nsum = 0.826310\n```"}}
{"problemSetProblem": {"id": "283", "label": "练习4-6", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "猜数字游戏", "content": "猜数字游戏是令游戏机随机产生一个100以内的正整数，用户输入一个数对其进行猜测，需要你编写程序自动对其与随机产生的被猜数进行比较，并提示大了（“Too big”），还是小了（“Too small”），相等表示猜到了。如果猜到，则结束程序。程序还要求统计猜的次数，如果1次猜出该数，提示“Bingo!”；如果3次以内猜到该数，则提示“Lucky You!”；如果超过3次但是在N（$$>$$3）次以内（包括第N次）猜到该数，则提示“Good Guess!”；如果超过N次都没有猜到，则提示“Game Over”，并结束程序。如果在到达N次之前，用户输入了一个负数，也输出“Game Over”，并结束程序。\n\n### 输入格式:\n\n输入第一行中给出两个不超过100的正整数，分别是游戏机产生的随机数、以及猜测的最大次数N。最后每行给出一个用户的输入，直到出现负数为止。\n\n### 输出格式:\n\n在一行中输出每次猜测相应的结果，直到输出猜对的结果或“Game Over”则结束。\n\n### 输入样例:\n```in\n58 4\n70\n50\n56\n58\n60\n-2\n```\n\n### 输出样例:\n```out\nToo big\nToo small\nToo small\nGood Guess!\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "364", "description": "猜数字游戏是令游戏机随机产生一个100以内的正整数，用户输入一个数对其进行猜测，需要你编写程序自动对其与随机产生的被猜数进行比较，并提示大了（“Too big”），还是小了（“Too small”），相等表示猜到了。如果猜到，则结束程序。程序还要求统计猜的次数，如果1次猜出该数，提示“Bingo!”；如果3次以内猜到该数，则提示“Lucky You!”；如果超过3次但是在N（$$>$$3）次以内（包括第N次）猜到该数，则提示“Good Guess!”；如果超过N次都没有猜到，则提示“Game Over”，并结束程序。如果在到达N次之前，用户输入了一个负数，也输出“Game Over”，并结束程序。\n\n### 输入格式:\n\n输入第一行中给出两个不超过100的正整数，分别是游戏机产生的随机数、以及猜测的最大次数N。最后每行给出一个用户的输入，直到出现负数为止。\n\n### 输出格式:\n\n在一行中输出每次猜测相应的结果，直到输出猜对的结果或“Game Over”则结束。\n\n### 输入样例:\n```in\n58 4\n70\n50\n56\n58\n60\n-2\n```\n\n### 输出样例:\n```out\nToo big\nToo small\nToo small\nGood Guess!\n```"}}
{"problemSetProblem": {"id": "284", "label": "练习4-7", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [{"name": "", "input": "10\n", "output": "2.71828180\n"}, {"name": "", "input": "10\n", "output": "2.71828180\n"}], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "求e的近似值", "content": "自然常数 $$e$$ 可以用级数 $$1+1/1!+1/2!+\\cdots +1/n! +\\cdots$$ 来近似计算。本题要求对给定的非负整数 $$n$$，求该级数的前 $$n+1$$ 项和。\n\n### 输入格式:\n\n输入第一行中给出非负整数 $$n$$（$$\\le 1000$$）。\n\n### 输出格式:\n\n在一行中输出部分和的值，保留小数点后八位。\n\n### 输入样例:\n```in\n10\n```\n\n### 输出样例:\n```out\n2.71828180\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "365", "description": "自然常数 $$e$$ 可以用级数 $$1+1/1!+1/2!+\\cdots +1/n! +\\cdots$$ 来近似计算。本题要求对给定的非负整数 $$n$$，求该级数的前 $$n+1$$ 项和。\n\n### 输入格式:\n\n输入第一行中给出非负整数 $$n$$（$$\\le 1000$$）。\n\n### 输出格式:\n\n在一行中输出部分和的值，保留小数点后八位。\n\n### 输入样例:\n```in\n10\n```\n\n### 输出样例:\n```out\n2.71828180\n```"}}
{"problemSetProblem": {"id": "285", "label": "练习4-10", "score": 20, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "找出最小值", "content": "本题要求编写程序，找出给定一系列整数中的最小值。\n\n### 输入格式：\n\n输入在一行中首先给出一个正整数$$n$$，之后是$$n$$个整数，其间以空格分隔。\n\n### 输出格式：\n\n在一行中按照“min = 最小值”的格式输出$$n$$个整数中的最小值。\n\n### 输入样例：\n```in\n4 -2 -123 100 0\n```\n\n### 输出样例：\n```out\nmin = -123\n```", "type": "PROGRAMMING", "author": "颜晖", "authorOrganization": {"id": "2", "name": "浙大城市学院", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "366", "description": "本题要求编写程序，找出给定一系列整数中的最小值。\n\n### 输入格式：\n\n输入在一行中首先给出一个正整数$$n$$，之后是$$n$$个整数，其间以空格分隔。\n\n### 输出格式：\n\n在一行中按照“min = 最小值”的格式输出$$n$$个整数中的最小值。\n\n### 输入样例：\n```in\n4 -2 -123 100 0\n```\n\n### 输出样例：\n```out\nmin = -123\n```"}}
{"problemSetProblem": {"id": "286", "label": "练习4-11", "score": 20, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [{"name": "", "input": "10 31\n", "output": "7 143\n"}, {"name": "", "input": "10 31\n", "output": "7 143\n"}], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "统计素数并求和", "content": "本题要求统计给定整数$$M$$和$$N$$区间内素数的个数并对它们求和。\n\n### 输入格式:\n\n输入在一行中给出两个正整数$$M$$和$$N$$（$$1\\le M\\le N\\le 500$$）。\n\n\n### 输出格式:\n\n在一行中顺序输出$$M$$和$$N$$区间内素数的个数以及它们的和，数字间以空格分隔。\n\n### 输入样例:\n```in\n10 31\n```\n\n### 输出样例:\n```out\n7 143\n```", "type": "PROGRAMMING", "author": "张彤彧", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "367", "description": "本题要求统计给定整数$$M$$和$$N$$区间内素数的个数并对它们求和。\n\n### 输入格式:\n\n输入在一行中给出两个正整数$$M$$和$$N$$（$$1\\le M\\le N\\le 500$$）。\n\n\n### 输出格式:\n\n在一行中顺序输出$$M$$和$$N$$区间内素数的个数以及它们的和，数字间以空格分隔。\n\n### 输入样例:\n```in\n10 31\n```\n\n### 输出样例:\n```out\n7 143\n```"}}
{"problemSetProblem": {"id": "287", "label": "习题4-1", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "求奇数和", "content": "本题要求计算给定的一系列正整数中奇数的和。\n\n### 输入格式:\n\n输入在一行中给出一系列正整数，其间以空格分隔。当读到零或负整数时，表示输入结束，该数字不要处理。\n\n### 输出格式:\n\n在一行中输出正整数序列中奇数的和。\n\n### 输入样例:\n```in\n8 7 4 3 70 5 6 101 -1\n```\n\n### 输出样例:\n```out\n116\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "368", "description": "本题要求计算给定的一系列正整数中奇数的和。\n\n### 输入格式:\n\n输入在一行中给出一系列正整数，其间以空格分隔。当读到零或负整数时，表示输入结束，该数字不要处理。\n\n### 输出格式:\n\n在一行中输出正整数序列中奇数的和。\n\n### 输入样例:\n```in\n8 7 4 3 70 5 6 101 -1\n```\n\n### 输出样例:\n```out\n116\n```"}}
{"problemSetProblem": {"id": "288", "label": "习题4-2", "score": 20, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "求幂级数展开的部分和", "content": "已知函数$$e^x$$可以展开为幂级数$$1+x+x^2 /2! + x^3 /3! + \\cdots + x^k /k! + \\cdots$$。现给定一个实数$$x$$，要求利用此幂级数部分和求$$e^x$$的近似值，求和一直继续到最后一项的绝对值小于0.00001。\n\n### 输入格式:\n\n输入在一行中给出一个实数$$x\\in [0, 5]$$。\n\n### 输出格式:\n\n在一行中输出满足条件的幂级数部分和，保留小数点后四位。\n\n### 输入样例:\n```in\n1.2\n```\n\n### 输出样例:\n```out\n3.3201\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "369", "description": "已知函数$$e^x$$可以展开为幂级数$$1+x+x^2 /2! + x^3 /3! + \\cdots + x^k /k! + \\cdots$$。现给定一个实数$$x$$，要求利用此幂级数部分和求$$e^x$$的近似值，求和一直继续到最后一项的绝对值小于0.00001。\n\n### 输入格式:\n\n输入在一行中给出一个实数$$x\\in [0, 5]$$。\n\n### 输出格式:\n\n在一行中输出满足条件的幂级数部分和，保留小数点后四位。\n\n### 输入样例:\n```in\n1.2\n```\n\n### 输出样例:\n```out\n3.3201\n```"}}
{"problemSetProblem": {"id": "289", "label": "习题4-3", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "求分数序列前N项和", "content": "本题要求编写程序，计算序列 2/1+3/2+5/3+8/5+... 的前N项之和。注意该序列从第2项起，每一项的分子是前一项分子与分母的和，分母是前一项的分子。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中输出部分和的值，精确到小数点后两位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n20\n```\n\n### 输出样例:\n```out\n32.66\n```", "type": "PROGRAMMING", "author": "张彤彧", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "370", "description": "本题要求编写程序，计算序列 2/1+3/2+5/3+8/5+... 的前N项之和。注意该序列从第2项起，每一项的分子是前一项分子与分母的和，分母是前一项的分子。\n\n### 输入格式:\n\n输入在一行中给出一个正整数N。\n\n### 输出格式:\n\n在一行中输出部分和的值，精确到小数点后两位。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n20\n```\n\n### 输出样例:\n```out\n32.66\n```"}}
{"problemSetProblem": {"id": "290", "label": "习题4-4", "score": 20, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [{"name": "", "input": "2 3\n", "output": "s = 246\n"}, {"name": "", "input": "2 3\n", "output": "s = 246\n"}], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "特殊a串数列求和", "content": "给定两个均不超过9的正整数$$a$$和$$n$$，要求编写程序求$$a+aa+aaa++\\cdots +aa\\cdots a$$（$$n$$个$$a$$）之和。\n\n### 输入格式：\n\n输入在一行中给出不超过9的正整数$$a$$和$$n$$。\n\n### 输出格式：\n\n在一行中按照“s = 对应的和”的格式输出。\n\n### 输入样例：\n```in\n2 3\n```\n\n### 输出样例：\n```out\ns = 246\n```", "type": "PROGRAMMING", "author": "颜晖", "authorOrganization": {"id": "2", "name": "浙大城市学院", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "371", "description": "给定两个均不超过9的正整数$$a$$和$$n$$，要求编写程序求$$a+aa+aaa++\\cdots +aa\\cdots a$$（$$n$$个$$a$$）之和。\n\n### 输入格式：\n\n输入在一行中给出不超过9的正整数$$a$$和$$n$$。\n\n### 输出格式：\n\n在一行中按照“s = 对应的和”的格式输出。\n\n### 输入样例：\n```in\n2 3\n```\n\n### 输出样例：\n```out\ns = 246\n```"}}
{"problemSetProblem": {"id": "291", "label": "习题4-5", "score": 20, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "换硬币", "content": "将一笔零钱换成5分、2分和1分的硬币，要求每种硬币至少有一枚，有几种不同的换法？\n\n### 输入格式:\n\n输入在一行中给出待换的零钱数额$$x\\in (8, 100)$$。\n\n### 输出格式:\n\n要求按5分、2分和1分硬币的数量依次从大到小的顺序，输出各种换法。每行输出一种换法，格式为：“fen5:5分硬币数量, fen2:2分硬币数量, fen1:1分硬币数量, total:硬币总数量”。最后一行输出“count = 换法个数”。\n\n### 输入样例:\n```in\n13\n```\n\n### 输出样例:\n```out\nfen5:2, fen2:1, fen1:1, total:4\nfen5:1, fen2:3, fen1:2, total:6\nfen5:1, fen2:2, fen1:4, total:7\nfen5:1, fen2:1, fen1:6, total:8\ncount = 4\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "372", "description": "将一笔零钱换成5分、2分和1分的硬币，要求每种硬币至少有一枚，有几种不同的换法？\n\n### 输入格式:\n\n输入在一行中给出待换的零钱数额$$x\\in (8, 100)$$。\n\n### 输出格式:\n\n要求按5分、2分和1分硬币的数量依次从大到小的顺序，输出各种换法。每行输出一种换法，格式为：“fen5:5分硬币数量, fen2:2分硬币数量, fen1:1分硬币数量, total:硬币总数量”。最后一行输出“count = 换法个数”。\n\n### 输入样例:\n```in\n13\n```\n\n### 输出样例:\n```out\nfen5:2, fen2:1, fen1:1, total:4\nfen5:1, fen2:3, fen1:2, total:6\nfen5:1, fen2:2, fen1:4, total:7\nfen5:1, fen2:1, fen1:6, total:8\ncount = 4\n```"}}
{"problemSetProblem": {"id": "292", "label": "习题4-6", "score": 20, "problemConfig": {"programmingProblemConfig": {"timeLimit": 2500, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [{"name": "", "input": "3\n", "output": "153\n370\n371\n407\n"}, {"name": "", "input": "3\n", "output": "153\n370\n371\n407\n"}], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "水仙花数", "content": "水仙花数是指一个$$N$$位正整数（$$N\\ge 3$$），它的每个位上的数字的$$N$$次幂之和等于它本身。例如：$$153 = 1^3 + 5^3+ 3^3$$。 本题要求编写程序,计算所有$$N$$位水仙花数。\n\n### 输入格式:\n\n输入在一行中给出一个正整数$$N$$（$$3\\le N\\le 7$$）。 \n\n### 输出格式:\n\n按递增顺序输出所有$$N$$位水仙花数，每个数字占一行。\n\n### 输入样例:\n```in\n3\n```\n\n### 输出样例:\n```out\n153\n370\n371\n407\n```", "type": "PROGRAMMING", "author": "徐镜春", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "373", "description": "水仙花数是指一个$$N$$位正整数（$$N\\ge 3$$），它的每个位上的数字的$$N$$次幂之和等于它本身。例如：$$153 = 1^3 + 5^3+ 3^3$$。 本题要求编写程序,计算所有$$N$$位水仙花数。\n\n### 输入格式:\n\n输入在一行中给出一个正整数$$N$$（$$3\\le N\\le 7$$）。 \n\n### 输出格式:\n\n按递增顺序输出所有$$N$$位水仙花数，每个数字占一行。\n\n### 输入样例:\n```in\n3\n```\n\n### 输出样例:\n```out\n153\n370\n371\n407\n```"}}
{"problemSetProblem": {"id": "293", "label": "习题4-7", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [{"name": "", "input": "511 292\n", "output": "73 2044\n"}, {"name": "", "input": "511 292\n", "output": "73 2044\n"}], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "最大公约数和最小公倍数", "content": "本题要求两个给定正整数的最大公约数和最小公倍数。\n\n### 输入格式:\n\n输入在一行中给出两个正整数M和N（$$\\le 1000$$）。\n\n### 输出格式:\n\n在一行中顺序输出M和N的最大公约数和最小公倍数，两数字间以1空格分隔。\n\n### 输入样例:\n```in\n511 292\n```\n\n### 输出样例:\n```out\n73 2044\n```\n\n**鸣谢安阳师范学院段晓云老师和软件工程五班李富龙同学补充测试数据！**", "type": "PROGRAMMING", "author": "张彤彧", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "374", "description": "本题要求两个给定正整数的最大公约数和最小公倍数。\n\n### 输入格式:\n\n输入在一行中给出两个正整数M和N（$$\\le 1000$$）。\n\n### 输出格式:\n\n在一行中顺序输出M和N的最大公约数和最小公倍数，两数字间以1空格分隔。\n\n### 输入样例:\n```in\n511 292\n```\n\n### 输出样例:\n```out\n73 2044\n```\n\n**鸣谢安阳师范学院段晓云老师和软件工程五班李富龙同学补充测试数据！**"}}
{"problemSetProblem": {"id": "294", "label": "习题4-8", "score": 20, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "高空坠球", "content": "皮球从某给定高度自由落下，触地后反弹到原高度的一半，再落下，再反弹，……，如此反复。问皮球在第$$n$$次落地时，在空中一共经过多少距离？第$$n$$次反弹的高度是多少？\n\n### 输入格式:\n\n输入在一行中给出两个非负整数，分别是皮球的初始高度和$$n$$，均在长整型范围内。 \n\n### 输出格式:\n\n在一行中顺序输出皮球第$$n$$次落地时在空中经过的距离、以及第$$n$$次反弹的高度，其间以一个空格分隔，保留一位小数。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n33 5\n```\n\n### 输出样例:\n```out\n94.9 1.0\n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "375", "description": "皮球从某给定高度自由落下，触地后反弹到原高度的一半，再落下，再反弹，……，如此反复。问皮球在第$$n$$次落地时，在空中一共经过多少距离？第$$n$$次反弹的高度是多少？\n\n### 输入格式:\n\n输入在一行中给出两个非负整数，分别是皮球的初始高度和$$n$$，均在长整型范围内。 \n\n### 输出格式:\n\n在一行中顺序输出皮球第$$n$$次落地时在空中经过的距离、以及第$$n$$次反弹的高度，其间以一个空格分隔，保留一位小数。题目保证计算结果不超过双精度范围。\n\n### 输入样例:\n```in\n33 5\n```\n\n### 输出样例:\n```out\n94.9 1.0\n```"}}
{"problemSetProblem": {"id": "295", "label": "习题4-9", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "打印菱形图案", "content": "本题要求编写程序，打印一个高度为$$n$$的、由“*”组成的正菱形图案。\n\n### 输入格式:\n\n输入在一行中给出一个正的奇数$$n$$。 \n\n### 输出格式:\n\n输出由$$n$$行星号“*”组成的菱形，如样例所示。每个星号后跟一个空格。\n\n### 输入样例:\n```in\n7\n```\n\n### 输出样例:\n```out\n      * \n    * * * \n  * * * * * \n* * * * * * * \n  * * * * * \n    * * * \n      * \n```", "type": "PROGRAMMING", "author": "C课程组", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "376", "description": "本题要求编写程序，打印一个高度为$$n$$的、由“*”组成的正菱形图案。\n\n### 输入格式:\n\n输入在一行中给出一个正的奇数$$n$$。 \n\n### 输出格式:\n\n输出由$$n$$行星号“*”组成的菱形，如样例所示。每个星号后跟一个空格。\n\n### 输入样例:\n```in\n7\n```\n\n### 输出样例:\n```out\n      * \n    * * * \n  * * * * * \n* * * * * * * \n  * * * * * \n    * * * \n      * \n```"}}
{"problemSetProblem": {"id": "296", "label": "习题4-10", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "猴子吃桃问题", "content": "一只猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个；第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半加一个。到第$$N$$天早上想再吃时，见只剩下一个桃子了。问：第一天共摘了多少个桃子？\n\n### 输入格式:\n\n输入在一行中给出正整数$$N$$（$$1<N\\le 10$$）。\n\n### 输出格式:\n\n在一行中输出第一天共摘了多少个桃子。\n\n### 输入样例:\n```in\n3\n```\n\n### 输出样例:\n```out\n10\n```", "type": "PROGRAMMING", "author": "徐镜春", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "377", "description": "一只猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个；第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半加一个。到第$$N$$天早上想再吃时，见只剩下一个桃子了。问：第一天共摘了多少个桃子？\n\n### 输入格式:\n\n输入在一行中给出正整数$$N$$（$$1<N\\le 10$$）。\n\n### 输出格式:\n\n在一行中输出第一天共摘了多少个桃子。\n\n### 输入样例:\n```in\n3\n```\n\n### 输出样例:\n```out\n10\n```"}}
{"problemSetProblem": {"id": "297", "label": "习题4-11", "score": 15, "problemConfig": {"programmingProblemConfig": {"timeLimit": 400, "memoryLimit": 65536, "codeSizeLimit": 16, "cases": {}, "exampleTestDatas": [], "testdataDescriptionCode": "", "customizeLimits": [], "stackSizeLimit": 0}, "solutionVisible": false}, "deadline": "1970-01-01T00:00:00Z", "title": "兔子繁衍问题", "content": "一对兔子，从出生后第3个月起每个月都生一对兔子。小兔子长到第3个月后每个月又生一对兔子。假如兔子都不死，请问第1个月出生的一对兔子，至少需要繁衍到第几个月时兔子总数才可以达到$$N$$对？\n\n### 输入格式:\n\n输入在一行中给出一个不超过10000的正整数$$N$$。\n\n### 输出格式:\n\n在一行中输出兔子总数达到$$N$$最少需要的月数。\n\n### 输入样例:\n```in\n30\n```\n\n### 输出样例:\n```out\n9\n```", "type": "PROGRAMMING", "author": "徐镜春", "authorOrganization": {"id": "1", "name": "浙江大学", "comment": "", "code": "", "country": "NO_COUNTRY", "membersCount": 0, "type": "UNKNOWN", "balance": 0, "subdomain": "", "logo": ""}, "compiler": "NO_COMPILER", "problemStatus": "REVIEWED", "lastSubmissionId": "0", "solution": "", "problemSetId": "12", "problemId": "378", "description": "一对兔子，从出生后第3个月起每个月都生一对兔子。小兔子长到第3个月后每个月又生一对兔子。假如兔子都不死，请问第1个月出生的一对兔子，至少需要繁衍到第几个月时兔子总数才可以达到$$N$$对？\n\n### 输入格式:\n\n输入在一行中给出一个不超过10000的正整数$$N$$。\n\n### 输出格式:\n\n在一行中输出兔子总数达到$$N$$最少需要的月数。\n\n### 输入样例:\n```in\n30\n```\n\n### 输出样例:\n```out\n9\n```"}}
